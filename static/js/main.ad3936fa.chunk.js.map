{"version":3,"sources":["stores/RouterStore.ts","components/common/globalStyle.ts","components/common/Header.tsx","components/support/ModalSupport.tsx","api/firebase.ts","api/support.ts","components/support/SupportStore.ts","components/support/Support.tsx","views/IndexView.tsx","components/requests/RequestFilters.tsx","components/requests/Requests.tsx","components/requests/RequestsStore.ts","views/RequestsView.tsx","Routes.tsx","index.tsx"],"names":["routerStore","RouterStore","GlobalStyle","createGlobalStyle","StyledHeader","styled","div","StyledHeaderContent","Header","to","ModalSupport","observer","store","isOpenedModal","isValid","isLoading","onSubmit","closeModal","setIsValid","Form","useForm","form","onChangeForm","validateFields","then","catch","title","visible","onOk","data","getFieldsValue","confirmLoading","okButtonProps","disabled","onCancel","resetFields","name","layout","style","width","initialValues","remember","Item","label","rules","required","message","onChange","Password","TextArea","db","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getFirestore","createRequest","params","a","addDoc","collection","id","uuidv4","status","createdAt","Date","docRef","getRequests","requestsRef","conditions","orderBy","fromCreatedAt","push","where","toCreatedAt","search","requests","q","query","getDocs","forEach","doc","q1","q2","docRef1","docRef2","docs","concat","SupportStore","openModal","makeAutoObservable","this","CenteredContainer","SupportForm","onClick","Page","IndexView","RangePicker","DatePicker","Option","Select","RequestsFilters","clearFilters","onChangeStatusFilter","onChangeSearchFilter","onChangeCreatedAtFilter","extra","type","gutter","span","Text","Search","marginTop","onSearch","showTime","placeholder","value","RequestsTable","columns","onChangePagination","dataIndex","ellipsis","render","String","seconds","loading","dataSource","toJS","rowKey","pagination","showSizeChanger","RequestsStore","filters","load","page","perPage","fieldValue","formatString","RequestsView","useEffect","path","component","enableLogging","undefined","browserHistory","createBrowserHistory","basename","history","syncHistoryWithStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ad3936fa.chunk.js","sourcesContent":["import { RouterStore } from 'mobx-react-router';\n\nexport const routerStore = new RouterStore();\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const font300 = `\"font300\", \"Arial\" !important;`;\nexport const font500 = `\"font500\", \"Arial\" !important;`;\nexport const font700 = `\"font700\", \"Arial\" !important;`;\nexport const font900 = `\"font900\", \"Arial\" !important;`;\n\nexport const GlobalStyle = createGlobalStyle`\n  * {\n      box-sizing: border-box;\n      margin: 0;\n      padding: 0;\n      font-family: \"font500\", \"Arial\";\n    }\n\n  @font-face {\n    font-family: 'font300';\n    src: url('fonts/MuseoSansCyrl-300.woff2');\n  }\n\n  @font-face {\n    font-family: 'font500';\n    src: url('fonts/MuseoSansCyrl-500.woff2');\n  }\n\n  @font-face {\n    font-family: 'font700';\n    src: url('fonts/MuseoSansCyrl-700.woff2');\n  }\n\n  @font-face {\n    font-family: 'font900';\n    src: url('fonts/MuseoSansCyrl-900.woff2');\n  }\n`;\n","import React, { FC } from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst StyledHeader = styled.div`\n  position: fixed;\n  height: 40px;\n  width: 100%;\n  background: #fff;\n  box-shadow: 0px 2px 3px 0 rgba(175, 196, 208, 0.47);\n`;\n\nconst StyledHeaderContent = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  max-width: 400px;\n  margin: 10px auto 0px;\n`;\n\nexport const Header: FC = () => {\n  return (\n    <StyledHeader>\n      <StyledHeaderContent>\n        <Link to=\"/\">Создать обращение</Link>\n        <Link to=\"/requests\">Посмотреть все обращения</Link>\n      </StyledHeaderContent>\n    </StyledHeader>\n  );\n};\n","import React, { FC } from \"react\";\nimport { Form, Input, Modal } from \"antd\";\nimport { observer } from \"mobx-react\";\n\nimport { SupportStore } from \"components/support/SupportStore\";\n\ninterface IProps {\n  store: SupportStore;\n}\n\nexport const ModalSupport: FC<IProps> = observer(({ store }) => {\n  const {\n    isOpenedModal,\n    isValid,\n    isLoading,\n    onSubmit,\n    closeModal,\n    setIsValid,\n  } = store;\n  const [form] = Form.useForm();\n\n  const onChangeForm = () => {\n    form\n      .validateFields()\n      .then(() => setIsValid(true))\n      .catch(() => setIsValid(false));\n  };\n\n  const onCancel = () => {\n    form.resetFields();\n\n    closeModal();\n  };\n\n  const onOk = () => {\n    const data = form.getFieldsValue();\n\n    onSubmit(data);\n  };\n\n  if (!isOpenedModal) return null;\n\n  return (\n    <Modal\n      title=\"Создание обращение в службу поддержки\"\n      visible={isOpenedModal}\n      onOk={onOk}\n      confirmLoading={isLoading}\n      okButtonProps={{\n        disabled: !isValid,\n      }}\n      onCancel={onCancel}\n    >\n      <Form\n        name=\"basic\"\n        form={form}\n        layout=\"vertical\"\n        style={{\n          width: \"100%\",\n        }}\n        initialValues={{ remember: true }}\n      >\n        <Form.Item\n          label=\"Имя\"\n          name=\"name\"\n          rules={[{ required: true, message: \"Введите ваше имя\" }]}\n        >\n          <Input onChange={onChangeForm} />\n        </Form.Item>\n\n        <Form.Item\n          label=\"Номер телефона\"\n          name=\"phone\"\n          rules={[{ required: true, message: \"Введите номер телефона\" }]}\n        >\n          <Input.Password onChange={onChangeForm} />\n        </Form.Item>\n\n        <Form.Item\n          label=\"Текст обращения\"\n          name=\"text\"\n          rules={[{ required: true, message: \"Введите ваше обращение\" }]}\n        >\n          <Input.TextArea onChange={onChangeForm} />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n});\n","import { initializeApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\n\nconst firebaseApp = initializeApp({\n  apiKey: \"AIzaSyC0fMeML71Pj5GyW9ZTjNL9uJWPBLTejk8\",\n  authDomain: \"sql-academy-285317.firebaseapp.com\",\n  projectId: \"sql-academy-285317\",\n  storageBucket: \"sql-academy-285317.appspot.com\",\n  messagingSenderId: \"635181414452\",\n  appId: \"1:635181414452:web:36fe38c206cf51ad143261\",\n});\n\nexport const db = getFirestore();\n","import { v4 as uuidv4 } from \"uuid\";\nimport {\n  collection,\n  query,\n  where,\n  addDoc,\n  getDocs,\n  orderBy,\n} from \"firebase/firestore\";\n\nimport { db } from \"api/firebase\";\n\nexport interface IRequestCreateParams {\n  name: string;\n  phone: string;\n  text: string;\n}\n\nexport interface IRequestFetchParams {\n  fromCreatedAt?: Date;\n  toCreatedAt?: Date;\n  status?: string;\n  search?: string;\n}\n\nexport const createRequest = async (params: IRequestCreateParams) => {\n  const docRef = await addDoc(collection(db, \"requests\"), {\n    ...params,\n    id: uuidv4(),\n    status: \"created\",\n    createdAt: new Date(),\n  });\n\n  return docRef;\n};\n\n// Используется firebase\n// вся нижеописанная логика подстраиваться под его api и обходит его ограничения\nexport const getRequests = async (params: IRequestFetchParams) => {\n  const requestsRef = collection(db, \"requests\");\n  const conditions = [orderBy(\"createdAt\", \"desc\")];\n\n  if (params.fromCreatedAt) {\n    conditions.push(where(\"createdAt\", \">=\", params.fromCreatedAt));\n  }\n\n  if (params.toCreatedAt) {\n    conditions.push(where(\"createdAt\", \"<=\", params.toCreatedAt));\n  }\n\n  if (params.status) {\n    conditions.push(where(\"status\", \"==\", params.status));\n  }\n\n  if (!params.search) {\n    const requests: any[] = [];\n    const q = query(requestsRef, ...conditions);\n    const docRef = await getDocs(q);\n    docRef.forEach((doc) => requests.push(doc.data()));\n\n    return requests;\n  } else {\n    const requests: any[] = [];\n    const q1 = query(\n      requestsRef,\n      ...conditions,\n      where(\"phone\", \"==\", params.search)\n    );\n    const q2 = query(\n      requestsRef,\n      ...conditions,\n      where(\"id\", \"==\", params.search)\n    );\n\n    const docRef1 = await getDocs(q1);\n    const docRef2 = await getDocs(q2);\n\n    const docRef = docRef1.docs.concat(docRef2.docs);\n    docRef.forEach((doc) => requests.push(doc.data()));\n\n    return requests;\n  }\n};\n","import { makeAutoObservable } from \"mobx\";\n\nimport { createRequest, getRequests, IRequestCreateParams } from \"api/support\";\n\nexport class SupportStore {\n  isOpenedModal: boolean = false;\n  isValid: boolean = false;\n  isLoading: boolean = false;\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  setIsValid = (isValid: boolean) => {\n    this.isValid = isValid;\n  };\n\n  openModal = () => {\n    this.isOpenedModal = true;\n  };\n\n  closeModal = () => {\n    this.isOpenedModal = false;\n  };\n\n  onSubmit = async (data: IRequestCreateParams) => {\n    this.isLoading = true;\n\n    try {\n      await createRequest(data);\n\n      this.closeModal();\n    } catch (error) {\n    } finally {\n      this.isLoading = false;\n    }\n  };\n}\n","import React, { FC } from \"react\";\nimport styled from \"styled-components\";\nimport { Button } from \"antd\";\nimport { observer } from \"mobx-react\";\n\nimport { ModalSupport } from \"components/support/ModalSupport\";\nimport { SupportStore } from \"components/support/SupportStore\";\n\nconst CenteredContainer = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nexport const SupportForm: FC = observer(() => {\n  const store: SupportStore = new SupportStore();\n  const { openModal } = store;\n  return (\n    <CenteredContainer>\n      <Button onClick={openModal}>\n        Отправить обращение в службу поддержки\n      </Button>\n      <ModalSupport store={store} />\n    </CenteredContainer>\n  );\n});\n","import React, { FC } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Header } from \"components/common/Header\";\nimport { SupportForm } from \"components/support/Support\";\n\nconst Page = styled.div`\n  position: relative;\n  height: 100vh;\n  width: 100vw;\n  background: #f5f5f5;\n`;\n\nconst IndexView: FC = () => {\n  return (\n    <Page>\n      <Header />\n      <SupportForm />\n    </Page>\n  );\n};\n\nexport default IndexView;\n","import React, { FC } from \"react\";\nimport {\n  Form,\n  Card,\n  Button,\n  Col,\n  Typography,\n  Select,\n  DatePicker,\n  Row,\n  Input,\n} from \"antd\";\nimport { observer } from \"mobx-react\";\n\nimport { RequestsStore } from \"components/requests/RequestsStore\";\n\ninterface IProps {\n  store: RequestsStore;\n}\n\nconst { RangePicker } = DatePicker;\nconst { Option } = Select;\n\nexport const RequestsFilters: FC<IProps> = observer(({ store }) => {\n  const {\n    clearFilters,\n    onChangeStatusFilter,\n    onChangeSearchFilter,\n    onChangeCreatedAtFilter,\n  } = store;\n  const [form] = Form.useForm();\n\n  const onClearFilters = () => {\n    form.resetFields();\n\n    clearFilters();\n  };\n\n  return (\n    <Card\n      title={\"Фильтры\"}\n      extra={\n        <Button type=\"link\" onClick={onClearFilters}>\n          Очистить фильтры\n        </Button>\n      }\n    >\n      <Form form={form}>\n        <Row gutter={32}>\n          <Col span={8}>\n            <Typography.Text>Поиск по ID и номеру</Typography.Text>\n\n            <Input.Search\n              style={{\n                width: \"100%\",\n                marginTop: 10,\n              }}\n              onSearch={onChangeSearchFilter}\n            />\n          </Col>\n          <Col span={8}>\n            <Typography.Text>Дата создания</Typography.Text>\n            <RangePicker\n              showTime\n              onChange={onChangeCreatedAtFilter}\n              style={{\n                width: \"100%\",\n                marginTop: 10,\n              }}\n            />\n          </Col>\n          <Col span={8}>\n            <Form.Item\n              name=\"status\"\n              rules={[{ required: true, message: \"Введите ваше имя\" }]}\n            >\n              <Typography.Text>Статус</Typography.Text>\n              <Select\n                onChange={onChangeStatusFilter}\n                placeholder={\"Статус заявки\"}\n                style={{\n                  width: \"100%\",\n                  marginTop: 10,\n                }}\n              >\n                <Option value={\"created\"} key={\"created\"}>\n                  Created\n                </Option>\n                <Option value={\"closed\"} key={\"closed\"}>\n                  Closed\n                </Option>\n              </Select>\n            </Form.Item>\n          </Col>\n        </Row>\n      </Form>\n    </Card>\n  );\n});\n","import React, { FC } from \"react\";\nimport styled from \"styled-components\";\nimport { Table, Space } from \"antd\";\nimport { observer } from \"mobx-react\";\n\nimport { RequestsStore } from \"components/requests/RequestsStore\";\nimport { RequestsFilters } from \"components/requests/RequestFilters\";\nimport { toJS } from \"mobx\";\n\nconst CenteredContainer = styled.div`\n  position: absolute;\n  min-width: 1200px;\n  top: 70px;\n  left: 50%;\n  transform: translateX(-50%);\n  background: #fff;\n  box-shadow: 0px 2px 3px 0 rgba(175, 196, 208, 0.47);\n  padding: 20px;\n`;\n\ninterface IProps {\n  store: RequestsStore;\n}\n\nexport const RequestsTable: FC<IProps> = observer(({ store }) => {\n  const { isLoading, requests, onChangePagination } = store;\n\n  const columns = [\n    {\n      title: \"ID обращения\",\n      dataIndex: \"id\",\n      width: \"20%\",\n    },\n    {\n      title: \"Пользователь\",\n      dataIndex: \"name\",\n      ellipsis: true,\n    },\n    {\n      title: \"Номер телефона\",\n      dataIndex: \"phone\",\n      width: \"15%\",\n    },\n    {\n      title: \"Статус\",\n      dataIndex: \"status\",\n      width: \"15%\",\n    },\n    {\n      title: \"Дата создания обращения\",\n      dataIndex: \"createdAt\",\n      width: \"25%\",\n      render: (data: any) => String(new Date(data.seconds * 1000)),\n    },\n  ];\n\n  return (\n    <CenteredContainer>\n      <RequestsFilters store={store} />\n      <Space>\n        <Table\n          loading={isLoading}\n          dataSource={toJS(requests)}\n          columns={columns}\n          rowKey=\"id\"\n          pagination={{\n            showSizeChanger: true,\n            // current: 1,\n            // total: 45,\n            // pageSize: 10,\n            // onChange: onChangePagination,\n          }}\n        />\n      </Space>\n    </CenteredContainer>\n  );\n});\n","import { makeAutoObservable, toJS } from \"mobx\";\n\nimport { getRequests, IRequestFetchParams } from \"api/support\";\n\nexport interface IRequest {\n  name: string;\n  phone: string;\n  text: string;\n  status: string;\n  createdAt: Date;\n}\n\nexport class RequestsStore {\n  isLoading: boolean = false;\n  requests: IRequest[] = [];\n  filters: IRequestFetchParams = {};\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  load = async () => {\n    this.isLoading = true;\n\n    try {\n      this.requests = await getRequests(this.filters);\n    } catch (error) {\n    } finally {\n      this.isLoading = false;\n    }\n  };\n\n  clearFilters = () => {\n    this.filters = {};\n\n    this.load();\n  };\n\n  onChangePagination = (page: number, perPage?: number) => {\n\n  }\n\n  onChangeStatusFilter = (fieldValue: string) => {\n    this.filters = {\n      ...toJS(this.filters),\n      status: fieldValue,\n    };\n\n    this.load();\n  };\n\n  onChangeSearchFilter = (value: string) => {\n    this.filters = {\n      ...toJS(this.filters),\n      search: value,\n    };\n\n    this.load();\n  };\n\n  onChangeCreatedAtFilter = (a: any, formatString: [string, string]) => {\n    this.filters = {\n      ...toJS(this.filters),\n      fromCreatedAt: new Date(formatString[0]),\n      toCreatedAt: new Date(formatString[1]),\n    };\n\n    this.load();\n  };\n}\n","import React, { FC, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { observer } from \"mobx-react\";\n\nimport { Header } from \"components/common/Header\";\nimport { RequestsTable } from \"components/requests/Requests\";\nimport { RequestsStore } from \"components/requests/RequestsStore\";\n\nconst Page = styled.div`\n  position: relative;\n  height: 100vh;\n  width: 100vw;\n  background: #f5f5f5;\n`;\n\nconst RequestsView: FC = observer(() => {\n  const store: RequestsStore = new RequestsStore();\n  const { load } = store;\n\n  useEffect(() => {\n    load();\n  }, [load]);\n\n  return (\n    <Page>\n      <Header />\n      <RequestsTable store={store} />\n    </Page>\n  );\n});\n\nexport default RequestsView;\n","import { observer } from \"mobx-react\";\nimport React, { FC } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport IndexView from \"views/IndexView\";\nimport RequestsView from \"views/RequestsView\";\n\nconst Routes: FC = () => {\n  return (\n    <Switch>\n      <Route path=\"/\" component={IndexView} />\n      <Route path=\"/requests\" component={RequestsView} />\n    </Switch>\n  );\n};\n\nexport default observer(Routes);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Router } from \"react-router\";\nimport { enableLogging } from \"mobx-logger\";\nimport { createBrowserHistory } from \"history\";\nimport { syncHistoryWithStore } from \"mobx-react-router\";\n\nimport { routerStore } from \"stores/RouterStore\";\nimport { GlobalStyle } from \"components/common/globalStyle\";\n\nimport Routes from \"Routes\";\n\nimport \"antd/dist/antd.css\";\n\n// MobX\nenableLogging(undefined);\n\n// history\nconst browserHistory = createBrowserHistory({ basename: \"/\" });\nconst history = syncHistoryWithStore(browserHistory, routerStore);\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle></GlobalStyle>\n    <Router history={history}>\n      <Routes />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}