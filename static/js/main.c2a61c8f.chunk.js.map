{"version":3,"sources":["stores/RouterStore.ts","components/common/globalStyle.ts","components/support/ModalSupport.tsx","api/support.ts","components/support/SupportStore.ts","components/support/Support.tsx","views/IndexView.tsx","Routes.tsx","index.tsx"],"names":["routerStore","RouterStore","GlobalStyle","createGlobalStyle","ModalSupport","observer","store","isOpenedModal","isValid","isLoading","onSubmit","closeModal","setIsValid","Form","useForm","form","onChangeForm","validateFields","then","catch","title","visible","onOk","data","getFieldsValue","confirmLoading","okButtonProps","disabled","onCancel","resetFields","name","layout","style","width","initialValues","remember","Item","label","rules","required","message","onChange","Password","TextArea","createRequest","params","Promise","resolve","setTimeout","SupportStore","openModal","a","makeAutoObservable","this","CenteredContainer","styled","div","SupportForm","onClick","Page","IndexView","path","component","enableLogging","undefined","browserHistory","createBrowserHistory","basename","history","syncHistoryWithStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gLAEaA,EAAc,IAAIC,c,gBCKlBC,EAAcC,YAAH,0iB,4DCGXC,EAA2BC,aAAS,YAAgB,IAAbC,EAAY,EAAZA,MAEhDC,EAMED,EANFC,cACAC,EAKEF,EALFE,QACAC,EAIEH,EAJFG,UACAC,EAGEJ,EAHFI,SACAC,EAEEL,EAFFK,WACAC,EACEN,EADFM,WAP4D,EAS/CC,IAAKC,UAAbC,EATuD,oBAWxDC,EAAe,WACnBD,EACGE,iBACAC,MAAK,kBAAMN,GAAW,MACtBO,OAAM,kBAAMP,GAAW,OAe5B,OAAKL,EAGH,cAAC,IAAD,CACEa,MAAM,6MACNC,QAASd,EACTe,KAZS,WACX,IAAMC,EAAOR,EAAKS,iBAElBd,EAASa,IAUPE,eAAgBhB,EAChBiB,cAAe,CACbC,UAAWnB,GAEboB,SAvBa,WACfb,EAAKc,cAELlB,KAYA,SAUE,eAAC,IAAD,CACEmB,KAAK,QACLf,KAAMA,EACNgB,OAAO,WACPC,MAAO,CACLC,MAAO,QAETC,cAAe,CAAEC,UAAU,GAP7B,UASE,cAAC,IAAKC,KAAN,CACEC,MAAM,qBACNP,KAAK,OACLQ,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,2FAHrC,SAKE,cAAC,IAAD,CAAOC,SAAUzB,MAGnB,cAAC,IAAKoB,KAAN,CACEC,MAAM,kFACNP,KAAK,QACLQ,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,+HAHrC,SAKE,cAAC,IAAME,SAAP,CAAgBD,SAAUzB,MAG5B,cAAC,IAAKoB,KAAN,CACEC,MAAM,wFACNP,KAAK,OACLQ,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,+HAHrC,SAKE,cAAC,IAAMG,SAAP,CAAgBF,SAAUzB,WA3CP,Q,0CC7BhB4B,EAAgB,SAACC,GAC5B,OAAO,IAAIC,SAAQ,SAACC,GAAD,OACjBC,YAAW,WACTD,EAAQF,KACP,SCXMI,EAKX,aAAe,IAAD,gCAJd1C,eAAyB,EAIX,KAHdC,SAAmB,EAGL,KAFdC,WAAqB,EAEP,KAIdG,WAAa,SAACJ,GACZ,EAAKA,QAAUA,GALH,KAQd0C,UAAY,WACV,EAAK3C,eAAgB,GATT,KAYdI,WAAa,WACX,EAAKJ,eAAgB,GAbT,KAgBdG,SAhBc,uCAgBH,WAAOa,GAAP,SAAA4B,EAAA,6DACT,EAAK1C,WAAY,EADR,kBAIDmC,EAAcrB,GAJb,OAMP,EAAKZ,aANE,sEASP,EAAKF,WAAY,EATV,0EAhBG,sDACZ2C,6BAAmBC,OCFjBC,EAAoBC,IAAOC,IAAV,mHAOVC,EAAkBpD,aAAS,WACtC,IAAMC,EAAsB,IAAI2C,EACxBC,EAAc5C,EAAd4C,UACR,OACE,eAACI,EAAD,WACE,cAAC,IAAD,CAAQI,QAASR,EAAjB,8NAGA,cAAC9C,EAAD,CAAcE,MAAOA,UClBrBqD,EAAOJ,IAAOC,IAAV,8GAeKI,EARO,WACpB,OACE,cAACD,EAAD,UACE,cAACF,EAAD,OCDSpD,eARI,WACjB,OACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOwD,KAAK,IAAIC,UAAWF,S,OCKjCG,6BAAcC,GAGd,IAAMC,EAAiBC,YAAqB,CAAEC,SAAU,MAClDC,EAAUC,+BAAqBJ,EAAgBjE,GAErDsE,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,cAACtE,EAAD,IACA,cAAC,IAAD,CAAQkE,QAASA,EAAjB,SACE,cAAC,EAAD,SAGJK,SAASC,eAAe,W","file":"static/js/main.c2a61c8f.chunk.js","sourcesContent":["import { RouterStore } from 'mobx-react-router';\n\nexport const routerStore = new RouterStore();\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const font300 = `\"font300\", \"Arial\" !important;`;\nexport const font500 = `\"font500\", \"Arial\" !important;`;\nexport const font700 = `\"font700\", \"Arial\" !important;`;\nexport const font900 = `\"font900\", \"Arial\" !important;`;\n\nexport const GlobalStyle = createGlobalStyle`\n  * {\n      box-sizing: border-box;\n      margin: 0;\n      padding: 0;\n      font-family: \"font500\", \"Arial\";\n    }\n\n  @font-face {\n    font-family: 'font300';\n    src: url('fonts/MuseoSansCyrl-300.woff2');\n  }\n\n  @font-face {\n    font-family: 'font500';\n    src: url('fonts/MuseoSansCyrl-500.woff2');\n  }\n\n  @font-face {\n    font-family: 'font700';\n    src: url('fonts/MuseoSansCyrl-700.woff2');\n  }\n\n  @font-face {\n    font-family: 'font900';\n    src: url('fonts/MuseoSansCyrl-900.woff2');\n  }\n`;\n","import React, { FC } from \"react\";\nimport { Form, Input, Modal } from \"antd\";\nimport { observer } from \"mobx-react\";\n\nimport { SupportStore } from \"components/support/SupportStore\";\n\ninterface IProps {\n  store: SupportStore;\n}\n\nexport const ModalSupport: FC<IProps> = observer(({ store }) => {\n  const {\n    isOpenedModal,\n    isValid,\n    isLoading,\n    onSubmit,\n    closeModal,\n    setIsValid,\n  } = store;\n  const [form] = Form.useForm();\n\n  const onChangeForm = () => {\n    form\n      .validateFields()\n      .then(() => setIsValid(true))\n      .catch(() => setIsValid(false));\n  };\n\n  const onCancel = () => {\n    form.resetFields();\n\n    closeModal();\n  };\n\n  const onOk = () => {\n    const data = form.getFieldsValue();\n\n    onSubmit(data);\n  };\n\n  if (!isOpenedModal) return null;\n\n  return (\n    <Modal\n      title=\"Создание обращение в службу поддержки\"\n      visible={isOpenedModal}\n      onOk={onOk}\n      confirmLoading={isLoading}\n      okButtonProps={{\n        disabled: !isValid,\n      }}\n      onCancel={onCancel}\n    >\n      <Form\n        name=\"basic\"\n        form={form}\n        layout=\"vertical\"\n        style={{\n          width: \"100%\",\n        }}\n        initialValues={{ remember: true }}\n      >\n        <Form.Item\n          label=\"Имя\"\n          name=\"name\"\n          rules={[{ required: true, message: \"Введите ваше имя\" }]}\n        >\n          <Input onChange={onChangeForm} />\n        </Form.Item>\n\n        <Form.Item\n          label=\"Номер телефона\"\n          name=\"phone\"\n          rules={[{ required: true, message: \"Введите номер телефона\" }]}\n        >\n          <Input.Password onChange={onChangeForm} />\n        </Form.Item>\n\n        <Form.Item\n          label=\"Текст обращения\"\n          name=\"text\"\n          rules={[{ required: true, message: \"Введите ваше обращение\" }]}\n        >\n          <Input.TextArea onChange={onChangeForm} />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n});\n","// import axios from \"axios\";\n\nexport interface IRequestCreateParams {\n  name: string;\n  phone: string;\n  text: string;\n}\n\n// export const createRequest = (params: IRequestCreateParams) =>\n//   axios.post(\"/\", params);\n\nexport const createRequest = (params: IRequestCreateParams) => {\n  return new Promise((resolve) =>\n    setTimeout(() => {\n      resolve(params);\n    }, 2000)\n  );\n};\n","import { makeAutoObservable } from \"mobx\";\n\nimport { createRequest, IRequestCreateParams } from \"api/support\";\n\nexport class SupportStore {\n  isOpenedModal: boolean = false;\n  isValid: boolean = false;\n  isLoading: boolean = false;\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  setIsValid = (isValid: boolean) => {\n    this.isValid = isValid;\n  };\n\n  openModal = () => {\n    this.isOpenedModal = true;\n  };\n\n  closeModal = () => {\n    this.isOpenedModal = false;\n  };\n\n  onSubmit = async (data: IRequestCreateParams) => {\n    this.isLoading = true;\n\n    try {\n      await createRequest(data);\n\n      this.closeModal();\n    } catch (error) {\n    } finally {\n      this.isLoading = false;\n    }\n  };\n}\n","import React, { FC } from \"react\";\nimport styled from \"styled-components\";\nimport { Button } from \"antd\";\nimport { observer } from \"mobx-react\";\n\nimport { ModalSupport } from \"components/support/ModalSupport\";\nimport { SupportStore } from \"components/support/SupportStore\";\n\nconst CenteredContainer = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nexport const SupportForm: FC = observer(() => {\n  const store: SupportStore = new SupportStore();\n  const { openModal } = store;\n  return (\n    <CenteredContainer>\n      <Button onClick={openModal}>\n        Отправить обращение в службу поддержки\n      </Button>\n      <ModalSupport store={store} />\n    </CenteredContainer>\n  );\n});\n","import React, { FC } from \"react\";\nimport styled from \"styled-components\";\n\nimport { SupportForm } from \"components/support/Support\";\n\nconst Page = styled.div`\n  position: relative;\n  height: 100vh;\n  width: 100vw;\n  background: #f5f5f5;\n`;\n\nconst IndexView: FC = () => {\n  return (\n    <Page>\n      <SupportForm />\n    </Page>\n  );\n};\n\nexport default IndexView;\n","import { observer } from \"mobx-react\";\nimport React, { FC } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport IndexView from \"views/IndexView\";\n\nconst Routes: FC = () => {\n  return (\n    <Switch>\n      <Route path=\"/\" component={IndexView} />\n    </Switch>\n  );\n};\n\nexport default observer(Routes);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Router } from \"react-router\";\nimport { enableLogging } from \"mobx-logger\";\nimport { createBrowserHistory } from \"history\";\nimport { syncHistoryWithStore } from \"mobx-react-router\";\n\nimport { routerStore } from \"stores/RouterStore\";\nimport { GlobalStyle } from \"components/common/globalStyle\";\nimport Routes from \"Routes\";\n\nimport \"antd/dist/antd.css\";\n\n// MobX\nenableLogging(undefined);\n\n// history\nconst browserHistory = createBrowserHistory({ basename: \"/\" });\nconst history = syncHistoryWithStore(browserHistory, routerStore);\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle></GlobalStyle>\n    <Router history={history}>\n      <Routes />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}